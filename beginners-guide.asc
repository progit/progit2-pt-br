= Guia Para Iniciantes em GitHub

Então você se interessou em colaborar na tradução do livro Pro Git para português, mas não sabe muito bem por onde começar? Este guia é para você.

Primeiramente, obrigado pelo seu interesse em colaborar com nosso projeto. Toda ajuda é muito bem-vinda!

Este guia assume que você sabe os comandos básicos do Git e também que você já criou a sua conta no GitHub.

== Obtendo o Repositório

Para começar a colaborar com esta tradução (ou qualquer outro projeto no GitHub), você precisa basicamente de duas coisas: criar um fork do projeto original e então clonar o seu fork localmente.

=== Criando o Fork do Repositório

Um *fork* nada mais é do que uma cópia do projeto na qual você pode mexer à vontade.

Para criar um fork deste projeto, basta acessar a link:https://github.com/progit/progit2-pt-br[página principal do repositório] e clicar no botão `Fork` que fica localizado no canto superior direito da página.

=== Clonando o Seu Fork Localmente

Embora seja possível trabalhar diretamente no GitHub, a opção mais confortável é sem dúvida fazer a tradução localmente, usando o editor de texto de sua preferência. Para fazer isso, é necessário clonar o seu fork.

O GitHub redirecionará você para a página principal do seu fork assim que ele acabar de ser criado. Nesta página, você deve clicar no botão verde com o nome `Code`. Aparecerá um menu, divido em três partes. Na parte superior, chamada `Clone with HTTPS`, você verá uma URL. Clique no botão destacado na imagem a seguir para copiar a URL para a área de transferência.

.Obtendo a URL para clonar o repositório..
image::clone-repository.png[Obtendo a URL para clonar o repositório.]

Em seguida, pela linha de comando, use o comando `git clone`, seguido da URL que você copiou. No meu caso, ficaria assim:

`git clone https://github.com/carlosschults/progit2-pt-br.git`

Pronto! Agora basta acessar seu novo repositório local executando `cd progit2-pt-br` e começar a trabalhar.

== Trabalhando Localmente

Para fazer a tradução, você vai precisar de basicamente três passos: 
1. Se certificar de que o repositório está atualizado.
2. Criar um novo branch e criar commits nele.
3. Enviar (fazer *push* do seu novo branch e abrir um pull request.)

=== Atualize Seu Repositório Local

Caso você tenha acabado de criar o seu fork e cloná-lo localmente, esse passo não será necessário, já que o repositório estará atualizado. Do contrário, continue.

Antes de começar a trabalhar é necessário que seu repositório local esteja atualizado com relação ao repositório original da tradução para pt-br. Isso é necessário por dois motivos. Primeiramente, outras pessoas estão colaborando o tempo todo com o repositório, então é importante que você receba as atualizações delas. Isso evita conflitos quando você envia seu pull request.

Adicionalmente, o repositório pt-br é constantemente sincronizado com o repositório do livro em inglês, que continua recebendo alterações até hoje. Também é importante que você tenha essas modificações, para que você não corra o risco de traduzir uma versão desatualizada do arquivo.

Fazer a sincronia é um processo fácil. Primeiro, você precisa adicionar o repositório pt-br original como um repositório remotom, ou *remote* (você só precisa fazer isso uma vez.) Você pode dar ao *remote* o nome que quiser, mas é uma convenção chamá-lo de *upstream.* Para adicionar o *remote*, execute o comando a seguir: 

`git remote add upstream https://github.com/progit/progit2-pt-br.git`

Agora, toda vez que quiser trabalhar no repositório local, você vai precisar de três passos simples:

1. Após verificar que seu branch master está limpo (isto é, não possui alterações não commitadas), execute:

`git fetch upstream`.

2. Em seguida, execute:

`git merge upstream/master`

3. Finalmente, execute `git status`. Se você ver uma mensagem dizendo que você está *n* commits à frente de *origin*, apenas execute:

`git push`


=== Faça Seu Trabalho Em Um Branch Dedicado

Agora tudo está pronto para que você possa trabalhar em sua tradução. Para isso, verifique você está no branch master. Então, crie um novo branch:

`git branch <nome-do-branch>`

Crie um nome descritivo, relacionado à tarefa que você for realizar. Exemplo:

`git branch traduzir-capitulo-4`

Depois, mude para o branch recém criado. Continuando o examplo acima, seria:

`git checkout traduzir-capitulo-4`

Se você quiser, você pode fazer as duas coisas com um único comando:

`git checkout -b traduzir-capitulo-4`

Após a criação do branch, traduza o arquivo e commite. Se for possível, tente deixar tudo em apenas um commit, pois isso contribui para um histórico mais limpo.

=== Envie Seu Branch e Abra Um Pull Request

Quando finalizar a tradução, envie seu branch para o seu fork, com o seguinte comando:

`git push -u origin <nome-do-branch>`

No caso do exemplo anterior, ficaria assim:

`git push -u origin traduzir-capitulo-4`

O último passo é abrir um pull request. Para isso, acesse a página do repositório original no GitHub, vá até a aba `Pull requests.` Você verá uma mensagem dizendo que você recentemente enviou um branch. Clique em `Compare & pull request.`

Em seguida, você terá a oportunidade de revisar o título do pull request e opcionalmente escrever uma descrição mais detalhada do que você fez. Embora não seja obrigatório, oferecer uma descrição detalhada facilitará o trabalho de quem for revisar a sua tradução.

Após o envio do seu pull request, sua tradução será avaliada. Talvez pediremos alterações, visando principalmente corrigir erros de digitação ou problemas de formatação e também adequar sua tradução às convenções adotadas no restante do livro. É recomendado ler as partes já traduzidas do livro para familiarizar-se com essas convenções.

Se alterações forem pedidas, basta fazer as correções localmente, adicionando os commits no seu branch dedicado. Quando tudo estiver pronto, basta enviar os commits com o comando:

`git push`

e o pull request será atualizado automaticamente.
